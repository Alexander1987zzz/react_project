{"version":3,"file":"DisplayFields.js","sourceRoot":"","sources":["../src/DisplayFields.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Async as _Async,\n  Field,\n  FieldEvent,\n  FieldFeedback as _FieldFeedback,\n  FieldFeedbacks as _FieldFeedbacks,\n  FieldFeedbackType,\n  FormWithConstraints,\n  FormWithConstraintsChildContext,\n  isHTMLInput\n} from 'react-form-with-constraints';\n\n// Before:\n// [\n//   {\n//     \"element\": \"<input id=\\\"username\\\" name=\\\"username\\\" required=\\\"\\\" minlength=\\\"3\\\" class=\\\"form-control is-pending-sm is-invalid\\\" value=\\\"\\\">\",\n//     \"name\": \"username\",\n//     \"validations\": [\n//       { \"key\": \"0.0\", \"type\": \"error\", \"show\": false },\n//       { \"key\": \"0.1\", \"type\": \"error\", \"show\": true },\n//       { \"key\": \"0.2\", \"type\": \"whenValid\" }\n//     ]\n//   }\n// ]\n//\n// After:\n// [\n//   {\n//     element: <input id=\"username\" name=\"username\" required=\"\" minlength=\"3\" class=\"form-control is-pending-sm is-invalid\" value=\"\">,\n//     name: \"username\",\n//     validations: [\n//       { key: \"0.0\", type: \"error\", show: false },\n//       { key: \"0.1\", type: \"error\", show: true },\n//       { key: \"0.2\", type: \"whenValid\", show: undefined }\n//     ]\n//   }\n// ]\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction beautifulStringify(obj: {}, space?: string | number) {\n  // Keep undefined\n  // [Preserving undefined that JSON.stringify otherwise removes](https://stackoverflow.com/q/26540706)\n  let str = JSON.stringify(\n    obj,\n    (_key, value) => (value === undefined ? '__undefined__' : value),\n    space\n  );\n  str = str.replace(/\"__undefined__\"/g, 'undefined');\n\n  // Remove quotes from properties\n  // Before: \"name\":\n  // After: name:\n  // [JSON.stringify without quotes on properties?](https://stackoverflow.com/q/11233498)\n  str = str.replace(/\"([^\"]+)\":/g, '$1:');\n\n  // Before: element: \"<input id=\\\"username\\\" name=\\\"username\\\" required=\\\"\\\">\",\n  // After: element: <input id=\\\"username\\\" name=\\\"username\\\" required=\\\"\\\">,\n  // eslint-disable-next-line unicorn/better-regex\n  str = str.replace(/: \"(.*[\\\\\"].*)\",/g, ': $1,');\n\n  // Before: <input id=\\\"username\\\" name=\\\"username\\\" required=\\\"\\\">\n  // After: <input id=\"username\" name=\"username\" required=\"\">\n  str = str.replace(/\\\\\"/g, '\"');\n\n  return str;\n}\n\n// Cannot display field.element directly, will throw \"Converting circular structure to JSON\" when calling JSON.stringify()\nfunction normalizeFieldElementProperty(fields: Field[]) {\n  return fields.map(field => {\n    const { element, ...otherProps } = field;\n    return element\n      ? {\n          element: isHTMLInput(element) ? element.outerHTML : element.props,\n          ...otherProps\n        }\n      : field;\n  });\n}\n\nexport class DisplayFields extends React.Component {\n  static contextTypes: React.ValidationMap<FormWithConstraintsChildContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired\n  };\n  context!: FormWithConstraintsChildContext;\n\n  /* eslint-disable react/destructuring-assignment */\n\n  componentDidMount() {\n    this.context.form.fieldsStore.addListener(FieldEvent.Added, this.reRender);\n    this.context.form.fieldsStore.addListener(FieldEvent.Removed, this.reRender);\n    this.context.form.addFieldDidValidateEventListener(this.reRender);\n    this.context.form.addFieldDidResetEventListener(this.reRender);\n  }\n\n  componentWillUnmount() {\n    this.context.form.fieldsStore.removeListener(FieldEvent.Added, this.reRender);\n    this.context.form.fieldsStore.removeListener(FieldEvent.Removed, this.reRender);\n    this.context.form.removeFieldDidValidateEventListener(this.reRender);\n    this.context.form.removeFieldDidResetEventListener(this.reRender);\n  }\n\n  reRender = () => {\n    this.forceUpdate();\n  };\n\n  render() {\n    let str = beautifulStringify(\n      normalizeFieldElementProperty(this.context.form.fieldsStore.fields),\n      2\n    );\n\n    // Cosmetic: improve formatting\n    //\n    // Replace this string:\n    // {\n    //   key: \"1.0\",\n    //   type: \"error\",\n    //   show: true\n    // }\n    // with this:\n    // { key: \"1.0\", type: \"error\", show: true }\n    str = str.replace(\n      /{\\s+key: (.*),\\s+type: (.*),\\s+show: (.*)\\s+}/g,\n      '{ key: $1, type: $2, show: $3 }'\n    );\n\n    return str;\n  }\n\n  /* eslint-enable react/destructuring-assignment */\n}\n\nexport { FormWithConstraints };\n\nexport class FieldFeedbacks extends _FieldFeedbacks {\n  render() {\n    const { for: fieldName, stop } = this.props;\n\n    let attr = '';\n    if (fieldName) attr += `for=\"${fieldName}\" `;\n    attr += `stop=\"${stop}\"`;\n\n    return (\n      <>\n        <li>\n          key=\"{this.key}\" {attr}\n        </li>\n        <ul>{super.render()}</ul>\n      </>\n    );\n  }\n}\n\nexport class FieldFeedback extends _FieldFeedback {\n  private rootEl: HTMLLIElement | null = null;\n\n  private getTextDecoration() {\n    const { show } = this.state.validation;\n\n    let textDecoration = '';\n    switch (show) {\n      case false:\n        textDecoration = 'line-through';\n        break;\n      case undefined:\n        textDecoration = 'line-through dotted';\n        break;\n      default:\n        textDecoration = '';\n    }\n\n    return textDecoration;\n  }\n\n  render() {\n    const { key, type } = this.state.validation;\n\n    return (\n      <li ref={rootEl => (this.rootEl = rootEl)}>\n        <span style={{ textDecoration: this.getTextDecoration() }}>\n          key=\"{key}\" type=\"{type}\"\n        </span>{' '}\n        {super.render()}\n      </li>\n    );\n  }\n\n  componentDidUpdate() {\n    // Hack: make FieldFeedback <span style=\"display: inline\">\n    // Also make Bootstrap 4 happy because it sets 'display: none', https://github.com/twbs/bootstrap/blob/v4.1.2/scss/mixins/_forms.scss#L31\n    const fieldFeedbackSpans = this.rootEl!.querySelectorAll<HTMLSpanElement>('[data-feedback]');\n    fieldFeedbackSpans.forEach(fieldFeedbackSpan => {\n      // eslint-disable-next-line no-param-reassign\n      fieldFeedbackSpan.style.display = 'inline';\n    });\n\n    // Change Async parent style\n    const li = this.rootEl!.closest('li.async');\n    if (li !== null) {\n      const async = li.querySelector<HTMLSpanElement>('span[style]');\n      async!.style.textDecoration = this.getTextDecoration();\n    }\n\n    // Change whenValid style\n    const { type } = this.state.validation;\n    if (type === FieldFeedbackType.WhenValid) {\n      const span = this.rootEl!.querySelector<HTMLSpanElement>('span[style]');\n      const whenValid = this.rootEl!.querySelector<HTMLSpanElement>(\n        `span.${this.props.classes!.valid}`\n      );\n      span!.style.textDecoration = whenValid !== null ? '' : 'line-through';\n    }\n  }\n}\n\nexport class Async<T> extends _Async<T> {\n  private rootEl: HTMLLIElement | null = null;\n\n  private static getTextDecoration() {\n    return 'line-through dotted';\n  }\n\n  componentDidUpdate() {\n    // Reset style\n    const async = this.rootEl!.querySelector<HTMLSpanElement>('span[style]');\n    async!.style.textDecoration = Async.getTextDecoration();\n  }\n\n  render() {\n    return (\n      <li className=\"async\" ref={rootEl => (this.rootEl = rootEl)}>\n        <span style={{ textDecoration: Async.getTextDecoration() }}>Async</span>\n        <ul>{super.render()}</ul>\n      </li>\n    );\n  }\n}\n"]}