(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('prop-types'), require('react-form-with-constraints')) :
    typeof define === 'function' && define.amd ? define(['exports', 'react', 'prop-types', 'react-form-with-constraints'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactFormWithConstraintsTools = {}, global.React, global.PropTypes, global.ReactFormWithConstraints));
}(this, (function (exports, React, PropTypes, reactFormWithConstraints) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function beautifulStringify(obj, space) {
        var str = JSON.stringify(obj, function (_key, value) { return (value === undefined ? '__undefined__' : value); }, space);
        str = str.replace(/"__undefined__"/g, 'undefined');
        str = str.replace(/"([^"]+)":/g, '$1:');
        str = str.replace(/: "(.*[\\"].*)",/g, ': $1,');
        str = str.replace(/\\"/g, '"');
        return str;
    }
    function normalizeFieldElementProperty(fields) {
        return fields.map(function (field) {
            var element = field.element, otherProps = __rest(field, ["element"]);
            return element
                ? __assign({ element: reactFormWithConstraints.isHTMLInput(element) ? element.outerHTML : element.props }, otherProps) : field;
        });
    }
    var DisplayFields = (function (_super) {
        __extends(DisplayFields, _super);
        function DisplayFields() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.reRender = function () {
                _this.forceUpdate();
            };
            return _this;
        }
        DisplayFields.prototype.componentDidMount = function () {
            this.context.form.fieldsStore.addListener(reactFormWithConstraints.FieldEvent.Added, this.reRender);
            this.context.form.fieldsStore.addListener(reactFormWithConstraints.FieldEvent.Removed, this.reRender);
            this.context.form.addFieldDidValidateEventListener(this.reRender);
            this.context.form.addFieldDidResetEventListener(this.reRender);
        };
        DisplayFields.prototype.componentWillUnmount = function () {
            this.context.form.fieldsStore.removeListener(reactFormWithConstraints.FieldEvent.Added, this.reRender);
            this.context.form.fieldsStore.removeListener(reactFormWithConstraints.FieldEvent.Removed, this.reRender);
            this.context.form.removeFieldDidValidateEventListener(this.reRender);
            this.context.form.removeFieldDidResetEventListener(this.reRender);
        };
        DisplayFields.prototype.render = function () {
            var str = beautifulStringify(normalizeFieldElementProperty(this.context.form.fieldsStore.fields), 2);
            str = str.replace(/{\s+key: (.*),\s+type: (.*),\s+show: (.*)\s+}/g, '{ key: $1, type: $2, show: $3 }');
            return str;
        };
        DisplayFields.contextTypes = {
            form: PropTypes.instanceOf(reactFormWithConstraints.FormWithConstraints).isRequired
        };
        return DisplayFields;
    }(React.Component));
    var FieldFeedbacks = (function (_super) {
        __extends(FieldFeedbacks, _super);
        function FieldFeedbacks() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FieldFeedbacks.prototype.render = function () {
            var _a = this.props, fieldName = _a.for, stop = _a.stop;
            var attr = '';
            if (fieldName)
                attr += "for=\"" + fieldName + "\" ";
            attr += "stop=\"" + stop + "\"";
            return (React.createElement(React.Fragment, null,
                React.createElement("li", null,
                    "key=\"",
                    this.key,
                    "\" ",
                    attr),
                React.createElement("ul", null, _super.prototype.render.call(this))));
        };
        return FieldFeedbacks;
    }(reactFormWithConstraints.FieldFeedbacks));
    var FieldFeedback = (function (_super) {
        __extends(FieldFeedback, _super);
        function FieldFeedback() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.rootEl = null;
            return _this;
        }
        FieldFeedback.prototype.getTextDecoration = function () {
            var show = this.state.validation.show;
            var textDecoration = '';
            switch (show) {
                case false:
                    textDecoration = 'line-through';
                    break;
                case undefined:
                    textDecoration = 'line-through dotted';
                    break;
                default:
                    textDecoration = '';
            }
            return textDecoration;
        };
        FieldFeedback.prototype.render = function () {
            var _this = this;
            var _a = this.state.validation, key = _a.key, type = _a.type;
            return (React.createElement("li", { ref: function (rootEl) { return (_this.rootEl = rootEl); } },
                React.createElement("span", { style: { textDecoration: this.getTextDecoration() } },
                    "key=\"",
                    key,
                    "\" type=\"",
                    type,
                    "\""),
                ' ',
                _super.prototype.render.call(this)));
        };
        FieldFeedback.prototype.componentDidUpdate = function () {
            var fieldFeedbackSpans = this.rootEl.querySelectorAll('[data-feedback]');
            fieldFeedbackSpans.forEach(function (fieldFeedbackSpan) {
                fieldFeedbackSpan.style.display = 'inline';
            });
            var li = this.rootEl.closest('li.async');
            if (li !== null) {
                var async = li.querySelector('span[style]');
                async.style.textDecoration = this.getTextDecoration();
            }
            var type = this.state.validation.type;
            if (type === reactFormWithConstraints.FieldFeedbackType.WhenValid) {
                var span = this.rootEl.querySelector('span[style]');
                var whenValid = this.rootEl.querySelector("span." + this.props.classes.valid);
                span.style.textDecoration = whenValid !== null ? '' : 'line-through';
            }
        };
        return FieldFeedback;
    }(reactFormWithConstraints.FieldFeedback));
    var Async = (function (_super) {
        __extends(Async, _super);
        function Async() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.rootEl = null;
            return _this;
        }
        Async.getTextDecoration = function () {
            return 'line-through dotted';
        };
        Async.prototype.componentDidUpdate = function () {
            var async = this.rootEl.querySelector('span[style]');
            async.style.textDecoration = Async.getTextDecoration();
        };
        Async.prototype.render = function () {
            var _this = this;
            return (React.createElement("li", { className: "async", ref: function (rootEl) { return (_this.rootEl = rootEl); } },
                React.createElement("span", { style: { textDecoration: Async.getTextDecoration() } }, "Async"),
                React.createElement("ul", null, _super.prototype.render.call(this))));
        };
        return Async;
    }(reactFormWithConstraints.Async));

    Object.defineProperty(exports, 'FormWithConstraints', {
        enumerable: true,
        get: function () {
            return reactFormWithConstraints.FormWithConstraints;
        }
    });
    exports.Async = Async;
    exports.DisplayFields = DisplayFields;
    exports.FieldFeedback = FieldFeedback;
    exports.FieldFeedbacks = FieldFeedbacks;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=react-form-with-constraints-tools.development.js.map
