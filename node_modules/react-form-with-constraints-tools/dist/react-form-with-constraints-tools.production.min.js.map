{"version":3,"file":"react-form-with-constraints-tools.production.min.js","sources":["../src/DisplayFields.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Async as _Async,\n  Field,\n  FieldEvent,\n  FieldFeedback as _FieldFeedback,\n  FieldFeedbacks as _FieldFeedbacks,\n  FieldFeedbackType,\n  FormWithConstraints,\n  FormWithConstraintsChildContext,\n  isHTMLInput\n} from 'react-form-with-constraints';\n\n// Before:\n// [\n//   {\n//     \"element\": \"<input id=\\\"username\\\" name=\\\"username\\\" required=\\\"\\\" minlength=\\\"3\\\" class=\\\"form-control is-pending-sm is-invalid\\\" value=\\\"\\\">\",\n//     \"name\": \"username\",\n//     \"validations\": [\n//       { \"key\": \"0.0\", \"type\": \"error\", \"show\": false },\n//       { \"key\": \"0.1\", \"type\": \"error\", \"show\": true },\n//       { \"key\": \"0.2\", \"type\": \"whenValid\" }\n//     ]\n//   }\n// ]\n//\n// After:\n// [\n//   {\n//     element: <input id=\"username\" name=\"username\" required=\"\" minlength=\"3\" class=\"form-control is-pending-sm is-invalid\" value=\"\">,\n//     name: \"username\",\n//     validations: [\n//       { key: \"0.0\", type: \"error\", show: false },\n//       { key: \"0.1\", type: \"error\", show: true },\n//       { key: \"0.2\", type: \"whenValid\", show: undefined }\n//     ]\n//   }\n// ]\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction beautifulStringify(obj: {}, space?: string | number) {\n  // Keep undefined\n  // [Preserving undefined that JSON.stringify otherwise removes](https://stackoverflow.com/q/26540706)\n  let str = JSON.stringify(\n    obj,\n    (_key, value) => (value === undefined ? '__undefined__' : value),\n    space\n  );\n  str = str.replace(/\"__undefined__\"/g, 'undefined');\n\n  // Remove quotes from properties\n  // Before: \"name\":\n  // After: name:\n  // [JSON.stringify without quotes on properties?](https://stackoverflow.com/q/11233498)\n  str = str.replace(/\"([^\"]+)\":/g, '$1:');\n\n  // Before: element: \"<input id=\\\"username\\\" name=\\\"username\\\" required=\\\"\\\">\",\n  // After: element: <input id=\\\"username\\\" name=\\\"username\\\" required=\\\"\\\">,\n  // eslint-disable-next-line unicorn/better-regex\n  str = str.replace(/: \"(.*[\\\\\"].*)\",/g, ': $1,');\n\n  // Before: <input id=\\\"username\\\" name=\\\"username\\\" required=\\\"\\\">\n  // After: <input id=\"username\" name=\"username\" required=\"\">\n  str = str.replace(/\\\\\"/g, '\"');\n\n  return str;\n}\n\n// Cannot display field.element directly, will throw \"Converting circular structure to JSON\" when calling JSON.stringify()\nfunction normalizeFieldElementProperty(fields: Field[]) {\n  return fields.map(field => {\n    const { element, ...otherProps } = field;\n    return element\n      ? {\n          element: isHTMLInput(element) ? element.outerHTML : element.props,\n          ...otherProps\n        }\n      : field;\n  });\n}\n\nexport class DisplayFields extends React.Component {\n  static contextTypes: React.ValidationMap<FormWithConstraintsChildContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired\n  };\n  context!: FormWithConstraintsChildContext;\n\n  /* eslint-disable react/destructuring-assignment */\n\n  componentDidMount() {\n    this.context.form.fieldsStore.addListener(FieldEvent.Added, this.reRender);\n    this.context.form.fieldsStore.addListener(FieldEvent.Removed, this.reRender);\n    this.context.form.addFieldDidValidateEventListener(this.reRender);\n    this.context.form.addFieldDidResetEventListener(this.reRender);\n  }\n\n  componentWillUnmount() {\n    this.context.form.fieldsStore.removeListener(FieldEvent.Added, this.reRender);\n    this.context.form.fieldsStore.removeListener(FieldEvent.Removed, this.reRender);\n    this.context.form.removeFieldDidValidateEventListener(this.reRender);\n    this.context.form.removeFieldDidResetEventListener(this.reRender);\n  }\n\n  reRender = () => {\n    this.forceUpdate();\n  };\n\n  render() {\n    let str = beautifulStringify(\n      normalizeFieldElementProperty(this.context.form.fieldsStore.fields),\n      2\n    );\n\n    // Cosmetic: improve formatting\n    //\n    // Replace this string:\n    // {\n    //   key: \"1.0\",\n    //   type: \"error\",\n    //   show: true\n    // }\n    // with this:\n    // { key: \"1.0\", type: \"error\", show: true }\n    str = str.replace(\n      /{\\s+key: (.*),\\s+type: (.*),\\s+show: (.*)\\s+}/g,\n      '{ key: $1, type: $2, show: $3 }'\n    );\n\n    return str;\n  }\n\n  /* eslint-enable react/destructuring-assignment */\n}\n\nexport { FormWithConstraints };\n\nexport class FieldFeedbacks extends _FieldFeedbacks {\n  render() {\n    const { for: fieldName, stop } = this.props;\n\n    let attr = '';\n    if (fieldName) attr += `for=\"${fieldName}\" `;\n    attr += `stop=\"${stop}\"`;\n\n    return (\n      <>\n        <li>\n          key=\"{this.key}\" {attr}\n        </li>\n        <ul>{super.render()}</ul>\n      </>\n    );\n  }\n}\n\nexport class FieldFeedback extends _FieldFeedback {\n  private rootEl: HTMLLIElement | null = null;\n\n  private getTextDecoration() {\n    const { show } = this.state.validation;\n\n    let textDecoration = '';\n    switch (show) {\n      case false:\n        textDecoration = 'line-through';\n        break;\n      case undefined:\n        textDecoration = 'line-through dotted';\n        break;\n      default:\n        textDecoration = '';\n    }\n\n    return textDecoration;\n  }\n\n  render() {\n    const { key, type } = this.state.validation;\n\n    return (\n      <li ref={rootEl => (this.rootEl = rootEl)}>\n        <span style={{ textDecoration: this.getTextDecoration() }}>\n          key=\"{key}\" type=\"{type}\"\n        </span>{' '}\n        {super.render()}\n      </li>\n    );\n  }\n\n  componentDidUpdate() {\n    // Hack: make FieldFeedback <span style=\"display: inline\">\n    // Also make Bootstrap 4 happy because it sets 'display: none', https://github.com/twbs/bootstrap/blob/v4.1.2/scss/mixins/_forms.scss#L31\n    const fieldFeedbackSpans = this.rootEl!.querySelectorAll<HTMLSpanElement>('[data-feedback]');\n    fieldFeedbackSpans.forEach(fieldFeedbackSpan => {\n      // eslint-disable-next-line no-param-reassign\n      fieldFeedbackSpan.style.display = 'inline';\n    });\n\n    // Change Async parent style\n    const li = this.rootEl!.closest('li.async');\n    if (li !== null) {\n      const async = li.querySelector<HTMLSpanElement>('span[style]');\n      async!.style.textDecoration = this.getTextDecoration();\n    }\n\n    // Change whenValid style\n    const { type } = this.state.validation;\n    if (type === FieldFeedbackType.WhenValid) {\n      const span = this.rootEl!.querySelector<HTMLSpanElement>('span[style]');\n      const whenValid = this.rootEl!.querySelector<HTMLSpanElement>(\n        `span.${this.props.classes!.valid}`\n      );\n      span!.style.textDecoration = whenValid !== null ? '' : 'line-through';\n    }\n  }\n}\n\nexport class Async<T> extends _Async<T> {\n  private rootEl: HTMLLIElement | null = null;\n\n  private static getTextDecoration() {\n    return 'line-through dotted';\n  }\n\n  componentDidUpdate() {\n    // Reset style\n    const async = this.rootEl!.querySelector<HTMLSpanElement>('span[style]');\n    async!.style.textDecoration = Async.getTextDecoration();\n  }\n\n  render() {\n    return (\n      <li className=\"async\" ref={rootEl => (this.rootEl = rootEl)}>\n        <span style={{ textDecoration: Async.getTextDecoration() }}>Async</span>\n        <ul>{super.render()}</ul>\n      </li>\n    );\n  }\n}\n"],"names":["normalizeFieldElementProperty","fields","map","field","element","otherProps","isHTMLInput","outerHTML","props","__extends","React.Component","DisplayFields","this","context","form","fieldsStore","addListener","FieldEvent","Added","reRender","Removed","addFieldDidValidateEventListener","addFieldDidResetEventListener","removeListener","removeFieldDidValidateEventListener","removeFieldDidResetEventListener","obj","space","str","JSON","stringify","_key","value","undefined","replace","PropTypes.instanceOf","FormWithConstraints","isRequired","_this","forceUpdate","_FieldFeedbacks","FieldFeedbacks","_a","fieldName","attr","React.createElement","key","_super","render","_FieldFeedback","FieldFeedback","textDecoration","state","validation","type","ref","rootEl","style","getTextDecoration","querySelectorAll","forEach","fieldFeedbackSpan","display","span","li","closest","querySelector","FieldFeedbackType","WhenValid","whenValid","classes","valid","_Async","Async","className"],"mappings":"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"}