{"ast":null,"code":"var _jsxFileName = \"D:\\\\11\\\\react_project\\\\src\\\\components\\\\UserForm.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      email: '',\n      age: '',\n      name: '',\n      surname: ''\n    };\n\n    this.handleChangeEmail = event => {\n      const email = event.target.value;\n      this.setState({\n        email\n      });\n    };\n\n    this.handleChangeAge = event => {\n      const age = event.target.value;\n      this.setState({\n        age\n      });\n    };\n\n    this.handleChangeName = event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeSurname = event => {\n      const surname = event.target.value;\n      this.setState({\n        surname\n      });\n    };\n\n    this.handleSubmit = () => {\n      const id = this.state.id;\n      this.setState({\n        id\n      });\n      this.props.saveUser(this.state);\n      this.clearForm();\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.userAttr !== prevProps.userAttr) {\n      this.setState({\n        id: this.props.userAttr.id,\n        name: this.props.userAttr.name,\n        surname: this.props.userAttr.surname,\n        age: this.props.userAttr.age,\n        email: this.props.userAttr.email\n      });\n    }\n  }\n\n  clearForm() {\n    this.setState({\n      id: '',\n      name: '',\n      surname: '',\n      age: '',\n      email: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      onError: errors => console.log(errors),\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Name\",\n        onChange: this.handleChangeName,\n        name: \"name\",\n        value: this.state.name,\n        validators: ['required', 'matchRegexp:^([A-Z][a-z]{2,15})$'],\n        errorMessages: ['this field is required', 'name is not valid']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Surname\",\n        onChange: this.handleChangeSurname,\n        name: \"surname\",\n        value: this.state.surname,\n        validators: ['required', 'matchRegexp:^([A-Z][a-z]{2,15})$'],\n        errorMessages: ['this field is required', 'surname is not valid']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Age\",\n        onChange: this.handleChangeAge,\n        name: \"age\",\n        value: this.state.age,\n        validators: ['required', 'minNumber:1', 'maxNumber:116', 'matchRegexp:^[1-9][0-9]?$'],\n        errorMessages: ['this field is required', 'email is not valid', 'some thing']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Email\",\n        onChange: this.handleChangeEmail,\n        name: \"email\",\n        value: this.state.email,\n        validators: ['required', 'isEmail'],\n        errorMessages: ['this field is required', 'email is not valid']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserForm;","map":{"version":3,"sources":["D:/11/react_project/src/components/UserForm.js"],"names":["React","Button","ValidatorForm","TextValidator","UserForm","Component","state","id","email","age","name","surname","handleChangeEmail","event","target","value","setState","handleChangeAge","handleChangeName","handleChangeSurname","handleSubmit","props","saveUser","clearForm","componentDidUpdate","prevProps","prevState","userAttr","render","errors","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nclass UserForm extends React.Component {\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.userAttr !== prevProps.userAttr) {\n            this.setState({\n                id: this.props.userAttr.id,\n                name: this.props.userAttr.name,\n                surname: this.props.userAttr.surname,\n                age: this.props.userAttr.age,\n                email: this.props.userAttr.email\n            });\n        }\n    }\n\n    state = {\n        id: '',\n        email: '',\n        age: '',\n        name: '',\n        surname: ''\n    }\n\n    handleChangeEmail = (event) => {\n        const email = event.target.value;\n        this.setState({email});\n    }\n    handleChangeAge = (event) => {\n        const age = event.target.value;\n        this.setState({age});\n    }\n    handleChangeName = (event) => {\n        const name = event.target.value;\n        this.setState({name});\n    }\n    handleChangeSurname = (event) => {\n        const surname = event.target.value;\n        this.setState({surname});\n    }\n\n    handleSubmit = () => {\n        const id = this.state.id\n        this.setState({id});\n        this.props.saveUser(this.state)\n        this.clearForm()\n    }\n\n    clearForm() {\n        this.setState({\n            id: '',\n            name: '',\n            surname: '',\n            age: '',\n            email: ''\n        });\n    }\n\n    render() {\n        return (\n            <ValidatorForm\n                ref=\"form\"\n                onSubmit={this.handleSubmit}\n                onError={errors => console.log(errors)}\n            >\n                <TextValidator\n                    label=\"Name\"\n                    onChange={this.handleChangeName}\n                    name=\"name\"\n                    value={this.state.name}\n                    validators={['required', 'matchRegexp:^([A-Z][a-z]{2,15})$']}\n                    errorMessages={['this field is required', 'name is not valid']}\n                />\n                <TextValidator\n                    label=\"Surname\"\n                    onChange={this.handleChangeSurname}\n                    name=\"surname\"\n                    value={this.state.surname}\n                    validators={['required', 'matchRegexp:^([A-Z][a-z]{2,15})$']}\n                    errorMessages={['this field is required', 'surname is not valid']}\n                />\n                <TextValidator\n                    label=\"Age\"\n                    onChange={this.handleChangeAge}\n                    name=\"age\"\n                    value={this.state.age}\n                    validators={['required', 'minNumber:1', 'maxNumber:116', 'matchRegexp:^[1-9][0-9]?$']}\n                    errorMessages={['this field is required', 'email is not valid', 'some thing']}\n                />\n                <TextValidator\n                    label=\"Email\"\n                    onChange={this.handleChangeEmail}\n                    name=\"email\"\n                    value={this.state.email}\n                    validators={['required', 'isEmail']}\n                    errorMessages={['this field is required', 'email is not valid']}\n                />\n                <Button type=\"submit\">Submit</Button>\n            </ValidatorForm>\n        );\n    }\n}\n\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}