{"ast":null,"code":"import _toConsumableArray from\"/mnt/d/11/react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/mnt/d/11/react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/d/11/react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/mnt/d/11/react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/mnt/d/11/react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/d/11/react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import UserForm from\"./UserForm\";import UserList from\"./UserList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainPage=/*#__PURE__*/function(_Component){_inherits(MainPage,_Component);var _super=_createSuper(MainPage);function MainPage(props){var _this;_classCallCheck(this,MainPage);_this=_super.call(this,props);_this.state={users:[],user:{\"id\":0,\"name\":'',\"surname\":'',\"age\":'',\"email\":''}};_this.removeUser=_this.removeUser.bind(_assertThisInitialized(_this));_this.addUser=_this.addUser.bind(_assertThisInitialized(_this));_this.editUser=_this.editUser.bind(_assertThisInitialized(_this));_this.saveUser=_this.saveUser.bind(_assertThisInitialized(_this));return _this;}_createClass(MainPage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"http://localhost:9000/rest/persons\").then(function(response){alert(response.status);response.json().then(function(data){_this2.setState({users:data});});});}},{key:\"saveUser\",value:function saveUser(user){if(user.id===0){this.addUser(user);}else{this.updateUser(user);}}},{key:\"editUser\",value:function editUser(user){this.state.user.id=user.id;this.setState({user:user});}},{key:\"addUser\",value:function addUser(user){var _this3=this;fetch(\"http://localhost:9000/rest/persons\",{body:JSON.stringify({user:user}),mode:\"cors\",method:\"POST\"}).then(function(response){alert(\"status \"+response.status);if(response.ok){response.json().then(function(data){var updatedUsers=[].concat(_toConsumableArray(_this3.state.users),[data]);_this3.setState({users:updatedUsers});});}else{alert('not added');}});}},{key:\"updateUser\",value:function updateUser(user){var _this4=this;fetch(\"http://localhost:9000/rest/persons\",{mode:\"cors\",body:JSON.stringify({user:user}),method:\"POST\"}).then(function(response){alert(\"status \"+response.status);if(response.ok){var updateIndex=_this4.state.users.findIndex(function(item){return item.id===user.id;});var updatedUsers=[].concat(_toConsumableArray(_this4.state.users.slice(0,updateIndex)),[user],_toConsumableArray(_this4.state.users.slice(updateIndex+1)));_this4.setState({users:updatedUsers});}else{alert('not updated');}});}},{key:\"removeUser\",value:function removeUser(user){var _this5=this;alert(\"dell \"+user.id);fetch(\"http://localhost:9000/rest/persons\",{mode:\"cors\",body:JSON.stringify({user:user}),method:\"DELETE\"}).then(function(response){alert(response.status);if(response.ok){var updatedUsers=_toConsumableArray(_this5.state.users).filter(function(i){return i.id!==user.id;});_this5.setState({users:updatedUsers});}else{alert(\"not deleted\");}});}},{key:\"render\",value:function render(){document.body.style.backgroundColor=\"rgba(167,165,74,0.35)\";return/*#__PURE__*/_jsxs(\"div\",{align:\"center\",children:[/*#__PURE__*/_jsx(UserForm,{users:this.state.users,saveUser:this.saveUser,userAttr:this.state.user}),/*#__PURE__*/_jsx(UserList,{users:this.state.users,removeUser:this.removeUser,editUser:this.editUser})]});}}]);return MainPage;}(Component);export default MainPage;","map":{"version":3,"sources":["/mnt/d/11/react_project/src/componetns/MainPage.js"],"names":["React","Component","UserForm","UserList","MainPage","props","state","users","user","removeUser","bind","addUser","editUser","saveUser","fetch","then","response","alert","status","json","data","setState","id","updateUser","body","JSON","stringify","mode","method","ok","updatedUsers","updateIndex","findIndex","item","slice","filter","i","document","style","backgroundColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport UserForm from \"./UserForm\";\r\nimport UserList from \"./UserList\";\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            user: {\r\n                \"id\": 0,\r\n                \"name\": '',\r\n                \"surname\": '',\r\n                \"age\": '',\r\n                \"email\": ''\r\n            }\r\n        };\r\n\r\n        this.removeUser = this.removeUser.bind(this);\r\n        this.addUser = this.addUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.saveUser = this.saveUser.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:9000/rest/persons\")\r\n            .then(response => {\r\n                    alert(response.status)\r\n                    response.json()\r\n                        .then(data => {\r\n                                this.setState({users: data})\r\n                            }\r\n                        )\r\n                }\r\n            )\r\n    }\r\n\r\n    saveUser(user) {\r\n        if (user.id === 0) {\r\n            this.addUser(user)\r\n        } else {\r\n            this.updateUser(user)\r\n        }\r\n    }\r\n\r\n    editUser(user) {\r\n        this.state.user.id = user.id\r\n        this.setState({user: user})\r\n    }\r\n\r\n    addUser(user) {\r\n        fetch(\"http://localhost:9000/rest/persons\", {\r\n            body: JSON.stringify({user}),\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n        }).then(response => {\r\n                alert(\"status \" + response.status)\r\n                if (response.ok) {\r\n                    response.json()\r\n                        .then(data => {\r\n                            let updatedUsers = [\r\n                                ...this.state.users,\r\n                                data\r\n                            ]\r\n                            this.setState({users: updatedUsers});\r\n                            }\r\n                        )\r\n                } else {\r\n                    alert('not added')\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    updateUser(user) {\r\n\r\n        fetch(\"http://localhost:9000/rest/persons\", {\r\n            mode: \"cors\",\r\n            body: JSON.stringify({user}),\r\n            method: \"POST\",\r\n        })\r\n            .then(response => {\r\n                    alert(\"status \" + response.status)\r\n                    if (response.ok) {\r\n                        const updateIndex = this.state.users.findIndex(item => item.id === user.id)\r\n                        let updatedUsers = [...this.state.users.slice(0, updateIndex), user, ...this.state.users.slice(updateIndex + 1)]\r\n                        this.setState({users: updatedUsers});\r\n                    } else {\r\n                        alert('not updated')\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    removeUser(user) {\r\n        alert(\"dell \" + user.id)\r\n        fetch(\"http://localhost:9000/rest/persons\", {\r\n            mode: \"cors\",\r\n            body: JSON.stringify({user}),\r\n            method: \"DELETE\",\r\n        })\r\n            .then(response => {\r\n                    alert(response.status)\r\n                    if (response.ok) {\r\n                        let updatedUsers = [...this.state.users].filter(i => i.id !== user.id);\r\n                        this.setState({users: updatedUsers});\r\n                    } else {\r\n                        alert(\"not deleted\")\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        document.body.style.backgroundColor = \"rgba(167,165,74,0.35)\";\r\n        return (\r\n            <div align={\"center\"}>\r\n                <UserForm users={this.state.users} saveUser={this.saveUser} userAttr={this.state.user}/>\r\n                <UserList users={this.state.users} removeUser={this.removeUser} editUser={this.editUser}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}