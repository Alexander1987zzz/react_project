{"ast":null,"code":"var _jsxFileName = \"/mnt/d/11/react_project/src/componetns/UserForm.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      email: '',\n      age: '',\n      name: '',\n      surname: '',\n      show: true\n    };\n\n    this.handleChangeEmail = event => {\n      const email = event.target.value;\n      this.setState({\n        email\n      });\n    };\n\n    this.handleChangeAge = event => {\n      const age = event.target.value;\n      this.setState({\n        age\n      });\n    };\n\n    this.handleChangeName = event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeSurname = event => {\n      const surname = event.target.value;\n      this.setState({\n        surname\n      });\n    };\n\n    this.handleSubmit = () => {\n      const id = this.state.id;\n      this.setState({\n        id\n      });\n      this.props.saveUser(this.state);\n      this.clearForm();\n    };\n\n    this.state = {\n      id: '',\n      email: '',\n      age: '',\n      name: '',\n      surname: '',\n      show: true\n    };\n    this.showFormAddUser = this.showFormAddUser.bind(this);\n  }\n\n  showFormAddUser() {\n    //alert(this.state.show)\n    let opened = this.state.show;\n    this.setState({\n      show: !opened\n    });\n    this.props.showFormAddUser(!opened); //this.props.show.setValue(this.state.show)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.userAttr !== prevProps.userAttr) {\n      this.setState({\n        id: this.props.userAttr.id,\n        name: this.props.userAttr.name,\n        surname: this.props.userAttr.surname,\n        age: this.props.userAttr.age,\n        email: this.props.userAttr.email\n      });\n    }\n\n    if (this.props.show !== prevProps.show) {\n      this.setState({\n        show: this.props.show\n      });\n    }\n  }\n\n  clearForm() {\n    this.setState({\n      id: 0,\n      name: '',\n      surname: '',\n      age: '',\n      email: '',\n      show: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"static\",\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            \"aria-label\": \"simple tabs example\",\n            children: /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Add User\",\n              onClick: this.showFormAddUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          visibility: this.state.show ? 'visible' : 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          ref: \"form\",\n          onSubmit: this.handleSubmit,\n          onError: errors => console.log(errors),\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Name\",\n            onChange: this.handleChangeName,\n            name: \"name\",\n            value: this.state.name,\n            validators: ['required', 'matchRegexp:^([A-Z][a-z]{2,15})$'],\n            errorMessages: ['this field is required', 'name is not valid']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Surname\",\n            onChange: this.handleChangeSurname,\n            name: \"surname\",\n            value: this.state.surname,\n            validators: ['required', 'matchRegexp:^([A-Z][a-z]{2,15})$'],\n            errorMessages: ['this field is required', 'surname is not valid']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Age\",\n            onChange: this.handleChangeAge,\n            name: \"age\",\n            value: this.state.age,\n            validators: ['required', 'minNumber:1', 'maxNumber:116', 'matchRegexp:^[1-9][0-9]?$'],\n            errorMessages: ['this field is required', 'email is not valid', 'some thing']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Email\",\n            onChange: this.handleChangeEmail,\n            name: \"email\",\n            value: this.state.email,\n            validators: ['required', 'isEmail'],\n            errorMessages: ['this field is required', 'email is not valid']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserForm;","map":{"version":3,"sources":["/mnt/d/11/react_project/src/componetns/UserForm.js"],"names":["React","Button","ValidatorForm","TextValidator","AppBar","Tabs","Tab","UserForm","Component","constructor","props","state","id","email","age","name","surname","show","handleChangeEmail","event","target","value","setState","handleChangeAge","handleChangeName","handleChangeSurname","handleSubmit","saveUser","clearForm","showFormAddUser","bind","opened","componentDidUpdate","prevProps","prevState","userAttr","render","visibility","errors","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nclass UserForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            email: '',\n            age: '',\n            name: '',\n            surname: '',\n            show: true\n        };\n        this.showFormAddUser = this.showFormAddUser.bind(this);\n    }\n\n    showFormAddUser() {\n        //alert(this.state.show)\n        let opened = this.state.show\n        this.setState({\n            show: !opened,\n        })\n        this.props.showFormAddUser(!opened)\n        //this.props.show.setValue(this.state.show)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.userAttr !== prevProps.userAttr) {\n            this.setState({\n                id: this.props.userAttr.id,\n                name: this.props.userAttr.name,\n                surname: this.props.userAttr.surname,\n                age: this.props.userAttr.age,\n                email: this.props.userAttr.email\n            });\n        }\n        if (this.props.show !== prevProps.show) {\n            this.setState({\n                show: this.props.show\n            });\n        }\n    }\n\n    state = {\n        id: 0,\n        email: '',\n        age: '',\n        name: '',\n        surname: '',\n        show: true\n    }\n\n    handleChangeEmail = (event) => {\n        const email = event.target.value;\n        this.setState({email});\n    }\n    handleChangeAge = (event) => {\n        const age = event.target.value;\n        this.setState({age});\n    }\n    handleChangeName = (event) => {\n        const name = event.target.value;\n        this.setState({name});\n    }\n    handleChangeSurname = (event) => {\n        const surname = event.target.value;\n        this.setState({surname});\n    }\n\n    handleSubmit = () => {\n        const id = this.state.id\n        this.setState({id});\n        this.props.saveUser(this.state)\n        this.clearForm()\n    }\n\n    clearForm() {\n        this.setState({\n            id: 0,\n            name: '',\n            surname: '',\n            age: '',\n            email: '',\n            show: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div >\n                    <AppBar position=\"static\">\n                        <Tabs  aria-label=\"simple tabs example\">\n                            <Tab label=\"Add User\" onClick={this.showFormAddUser}/>\n\n                        </Tabs>\n                    </AppBar>\n\n                </div>\n                <div style={{visibility: this.state.show ? 'visible' : 'hidden' }}>\n                    <ValidatorForm\n                        ref=\"form\"\n                        onSubmit={this.handleSubmit}\n                        onError={errors => console.log(errors)}\n                    >\n                        <br />\n                        <TextValidator\n                            label=\"Name\"\n                            onChange={this.handleChangeName}\n                            name=\"name\"\n                            value={this.state.name}\n                            validators={['required', 'matchRegexp:^([A-Z][a-z]{2,15})$']}\n                            errorMessages={['this field is required', 'name is not valid']}\n                        />\n                        <TextValidator\n                            label=\"Surname\"\n                            onChange={this.handleChangeSurname}\n                            name=\"surname\"\n                            value={this.state.surname}\n                            validators={['required', 'matchRegexp:^([A-Z][a-z]{2,15})$']}\n                            errorMessages={['this field is required', 'surname is not valid']}\n                        />\n                        <TextValidator\n                            label=\"Age\"\n                            onChange={this.handleChangeAge}\n                            name=\"age\"\n                            value={this.state.age}\n                            validators={['required', 'minNumber:1', 'maxNumber:116', 'matchRegexp:^[1-9][0-9]?$']}\n                            errorMessages={['this field is required', 'email is not valid', 'some thing']}\n                        />\n                        <TextValidator\n                            label=\"Email\"\n                            onChange={this.handleChangeEmail}\n                            name=\"email\"\n                            value={this.state.email}\n                            validators={['required', 'isEmail']}\n                            errorMessages={['this field is required', 'email is not valid']}\n                        />\n                        <br />\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n                    </ValidatorForm>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}