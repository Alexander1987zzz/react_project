{"ast":null,"code":"import * as React from 'react';\nexport function deepForEach(children, fn) {\n  React.Children.forEach(children, child => {\n    const element = child;\n\n    if (element.props && element.props.children && typeof element.props.children === 'object') {\n      deepForEach(element.props.children, fn);\n    }\n\n    fn(element);\n  });\n}","map":{"version":3,"sources":["../src/deepForEach.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAIA,OAAM,SAAU,WAAV,CACJ,QADI,EAEJ,EAFI,EAEwC;AAE5C,EAAA,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,QAAvB,EAAiC,KAAK,IAAG;AACvC,UAAM,OAAO,GAAG,KAAhB;;AACA,QAAI,OAAO,CAAC,KAAR,IAAiB,OAAO,CAAC,KAAR,CAAc,QAA/B,IAA2C,OAAO,OAAO,CAAC,KAAR,CAAc,QAArB,KAAkC,QAAjF,EAA2F;AACzF,MAAA,WAAW,CAAC,OAAO,CAAC,KAAR,CAAc,QAAf,EAAyB,EAAzB,CAAX;AACD;;AACD,IAAA,EAAE,CAAC,OAAD,CAAF;AACD,GAND;AAOD","sourcesContent":["import * as React from 'react';\n\n// Recursive React.Children.forEach()\n// Taken from https://github.com/fernandopasik/react-children-utilities/blob/v0.2.2/src/index.js#L68\nexport function deepForEach(\n  children: React.ReactNode,\n  fn: (child: React.ReactElement<any>) => void\n) {\n  React.Children.forEach(children, child => {\n    const element = child as React.ReactElement<any>;\n    if (element.props && element.props.children && typeof element.props.children === 'object') {\n      deepForEach(element.props.children, fn);\n    }\n    fn(element);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}