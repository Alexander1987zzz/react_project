{"ast":null,"code":"var _jsxFileName = \"D:\\\\11\\\\react_project\\\\src\\\\components\\\\UserForm.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      age: '',\n      name: '',\n      surname: ''\n    };\n\n    this.handleChangeEmail = event => {\n      const email = event.target.value;\n      this.setState({\n        email\n      });\n    };\n\n    this.handleChangeAge = event => {\n      const age = event.target.value;\n      this.setState({\n        age\n      });\n    };\n\n    this.handleChangeName = event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeSurname = event => {\n      const surname = event.target.value;\n      this.setState({\n        surname\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.props.addUser(this.state);\n      this.clearForm();\n    };\n  }\n\n  clearForm() {\n    this.setState({\n      name: '',\n      surname: '',\n      age: '',\n      email: ''\n    });\n  }\n\n  render() {\n    let name = this.props.userAttr.name;\n    let surname = this.state;\n    let age = this.state;\n    let email = this.state;\n\n    if (this.props.userAttr) {\n      name = this.props.userAttr.name;\n      surname = this.props.userAttr.surname;\n      age = this.props.userAttr.age;\n      email = this.props.userAttr.email;\n    }\n\n    return /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      onError: errors => console.log(errors),\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Name\",\n        onChange: this.handleChangeName,\n        name: \"name\",\n        value: name,\n        validators: ['required', 'matchRegexp:^([A-Z][a-z]{2,15})$'],\n        errorMessages: ['this field is required', 'name is not valid']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Surname\",\n        onChange: this.handleChangeSurname,\n        name: \"surname\",\n        value: surname,\n        validators: ['required', 'matchRegexp:^([A-Z][a-z]{2,15})$'],\n        errorMessages: ['this field is required', 'surname is not valid']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Age\",\n        onChange: this.handleChangeAge,\n        name: \"age\",\n        value: age,\n        validators: ['required', 'minNumber:1', 'maxNumber:116', 'matchRegexp:^[1-9][0-9]?$'],\n        errorMessages: ['this field is required', 'email is not valid', 'some thing']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Email\",\n        onChange: this.handleChangeEmail,\n        name: \"email\",\n        value: email,\n        validators: ['required', 'isEmail'],\n        errorMessages: ['this field is required', 'email is not valid']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserForm;","map":{"version":3,"sources":["D:/11/react_project/src/components/UserForm.js"],"names":["React","Button","ValidatorForm","TextValidator","UserForm","Component","state","email","age","name","surname","handleChangeEmail","event","target","value","setState","handleChangeAge","handleChangeName","handleChangeSurname","handleSubmit","props","addUser","clearForm","render","userAttr","errors","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nclass UserForm extends React.Component {\r\n\r\n\r\n    state = {\r\n        email: '',\r\n        age: '',\r\n        name: '',\r\n        surname: ''\r\n    }\r\n\r\n    handleChangeEmail = (event) => {\r\n        const email = event.target.value;\r\n        this.setState({email});\r\n    }\r\n    handleChangeAge = (event) => {\r\n        const age = event.target.value;\r\n        this.setState({age});\r\n    }\r\n    handleChangeName = (event) => {\r\n        const name = event.target.value;\r\n        this.setState({name});\r\n    }\r\n    handleChangeSurname = (event) => {\r\n        const surname = event.target.value;\r\n        this.setState({surname});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.addUser(this.state)\r\n        this.clearForm()\r\n    }\r\n\r\n    clearForm() {\r\n        this.setState({\r\n            name: '',\r\n            surname: '',\r\n            age: '',\r\n            email: ''\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let  name  = this.props.userAttr.name;\r\n        let surname  = this.state;\r\n        let  age  = this.state;\r\n        let  email  = this.state;\r\n\r\n        if(this.props.userAttr){\r\n            name  = this.props.userAttr.name;\r\n            surname  = this.props.userAttr.surname;\r\n            age  = this.props.userAttr.age;\r\n            email  = this.props.userAttr.email;\r\n\r\n        }\r\n\r\n        return (\r\n            <ValidatorForm\r\n                ref=\"form\"\r\n                onSubmit={this.handleSubmit}\r\n                onError={errors => console.log(errors)}\r\n            >\r\n                <TextValidator\r\n                    label=\"Name\"\r\n                    onChange={this.handleChangeName}\r\n                    name=\"name\"\r\n                    value={name}\r\n                    validators={['required', 'matchRegexp:^([A-Z][a-z]{2,15})$']}\r\n                    errorMessages={['this field is required', 'name is not valid']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Surname\"\r\n                    onChange={this.handleChangeSurname}\r\n                    name=\"surname\"\r\n                    value={surname}\r\n                    validators={['required', 'matchRegexp:^([A-Z][a-z]{2,15})$']}\r\n                    errorMessages={['this field is required', 'surname is not valid']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Age\"\r\n                    onChange={this.handleChangeAge}\r\n                    name=\"age\"\r\n                    value={age}\r\n                    validators={['required', 'minNumber:1', 'maxNumber:116', 'matchRegexp:^[1-9][0-9]?$']}\r\n                    errorMessages={['this field is required', 'email is not valid', 'some thing']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Email\"\r\n                    onChange={this.handleChangeEmail}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    validators={['required', 'isEmail']}\r\n                    errorMessages={['this field is required', 'email is not valid']}\r\n                />\r\n\r\n                <Button type=\"submit\">Submit</Button>\r\n            </ValidatorForm>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}