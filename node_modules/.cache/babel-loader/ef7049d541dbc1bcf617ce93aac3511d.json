{"ast":null,"code":"export const validName = value => {\n  return value && /^[A-Z][a-z]*$/.test(value) ? [] : ['Name must start with a capital letter and contain only latin symbols'];\n};\nexport const validEmpty = value => {\n  return value && value.length ? [] : ['Field can not be empty'];\n};\nexport const validNameMaxLength = value => {\n  return value && value.length <= 20 ? [] : [`Max length is 20`];\n};\nexport const validDate = dateString => {\n  return dateString && /^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)$|^(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))$|^(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))$|^(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))$/.test(dateString) ? [] : ['Date format: YYYY-MM-DD'];\n};\nexport const validEmail = email => {\n  return email && /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email) ? [] : ['Incorrect email format'];\n};","map":{"version":3,"sources":["D:/11/react_project/src/components/validators/validator.js"],"names":["validName","value","test","validEmpty","length","validNameMaxLength","validDate","dateString","validEmail","email"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,KAAD,IAAW;AAChC,SAAOA,KAAK,IAAI,gBAAgBC,IAAhB,CAAqBD,KAArB,CAAT,GACH,EADG,GAEH,CAAC,sEAAD,CAFJ;AAGH,CAJM;AAMP,OAAO,MAAME,UAAU,GAAIF,KAAD,IAAW;AACjC,SAAOA,KAAK,IAAIA,KAAK,CAACG,MAAf,GAAwB,EAAxB,GAA6B,CAAC,wBAAD,CAApC;AACH,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAIJ,KAAD,IAAW;AACzC,SAAOA,KAAK,IAAIA,KAAK,CAACG,MAAN,IAAgB,EAAzB,GAA8B,EAA9B,GAAmC,CAAE,kBAAF,CAA1C;AACH,CAFM;AAIP,OAAO,MAAME,SAAS,GAAIC,UAAD,IAAgB;AACrC,SAAOA,UAAU,IAAI,4PAA4PL,IAA5P,CAAiQK,UAAjQ,CAAd,GAA6R,EAA7R,GAAkS,CAAC,yBAAD,CAAzS;AACH,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOA,KAAK,IAAI,wJAAwJP,IAAxJ,CAA6JO,KAA7J,CAAT,GAA+K,EAA/K,GAAoL,CAAC,wBAAD,CAA3L;AACH,CAFM","sourcesContent":["export const validName = (value) => {\r\n    return value && /^[A-Z][a-z]*$/.test(value) ?\r\n        [] :\r\n        ['Name must start with a capital letter and contain only latin symbols'];\r\n};\r\n\r\nexport const validEmpty = (value) => {\r\n    return value && value.length ? [] : ['Field can not be empty'];\r\n};\r\n\r\nexport const validNameMaxLength = (value) => {\r\n    return value && value.length <= 20 ? [] : [`Max length is 20`];\r\n};\r\n\r\nexport const validDate = (dateString) => {\r\n    return dateString && /^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)$|^(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))$|^(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))$|^(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))$/.test(dateString) ? [] : ['Date format: YYYY-MM-DD'];\r\n};\r\n\r\nexport const validEmail = (email) => {\r\n    return email && /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email) ? [] : ['Incorrect email format'];\r\n}"]},"metadata":{},"sourceType":"module"}